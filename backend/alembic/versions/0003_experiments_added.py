"""Experiments added

Revision ID: 0003
Revises: 0002
Create Date: 2025-03-07 01:09:41.789807

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0003'
down_revision: Union[str, None] = '0002'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schemas',
                    sa.Column('type', sa.Enum('INPUT', 'OUTPUT', 'PARAMETERS', 'CONTEXT', name='schemakind'),
                              nullable=False),
                    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_schemas'))
                    )
    op.create_table('computational_experiment_templates',
                    sa.Column('input_schema_id', sa.Integer(), nullable=False),
                    sa.Column('output_schema_id', sa.Integer(), nullable=False),
                    sa.Column('parameters_schema_id', sa.Integer(), nullable=False),
                    sa.Column('context_schema_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['context_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_templates_context_schema_id_schemas')),
                    sa.ForeignKeyConstraint(['input_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_templates_input_schema_id_schemas')),
                    sa.ForeignKeyConstraint(['output_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_templates_output_schema_id_schemas')),
                    sa.ForeignKeyConstraint(['parameters_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_templates_parameters_schema_id_schemas')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_computational_experiment_templates'))
                    )
    op.create_table('laboratory_experiments',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('kind', sa.Enum('LABORATORY', 'COMPUTATIONAL', name='experimentkind'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"),
                              nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"),
                              nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_laboratory_experiments'))
                    )
    op.create_table('computational_experiments',
                    sa.Column('template_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('kind', sa.Enum('LABORATORY', 'COMPUTATIONAL', name='experimentkind'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"),
                              nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"),
                              nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['template_id'], ['computational_experiment_templates.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_computational_experiments'))
                    )
    op.create_table('measurements',
                    sa.Column('row', sa.Integer(), nullable=False),
                    sa.Column('column', sa.Integer(), nullable=False),
                    sa.Column('value', sa.String(), nullable=False),
                    sa.Column('experiment_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['experiment_id'], ['laboratory_experiments.id'], ),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_measurements'))
                    )
    op.create_table('computational_experiment_datas',
                    sa.Column('experiment_id', sa.Integer(), nullable=False),
                    sa.Column('input_schema_id', sa.Integer(), nullable=False),
                    sa.Column('output_schema_id', sa.Integer(), nullable=False),
                    sa.Column('parameters_schema_id', sa.Integer(), nullable=False),
                    sa.Column('context_schema_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['context_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_datas_context_schema_id_schemas')),
                    sa.ForeignKeyConstraint(['experiment_id'], ['computational_experiments.id'], name=op.f('fk_computational_experiment_datas_experiment_id_computational_experiments')),
                    sa.ForeignKeyConstraint(['input_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_datas_input_schema_id_schemas')),
                    sa.ForeignKeyConstraint(['output_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_datas_output_schema_id_schemas')),
                    sa.ForeignKeyConstraint(['parameters_schema_id'], ['schemas.id'], name=op.f('fk_computational_experiment_datas_parameters_schema_id_schemas')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_computational_experiment_datas'))
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('computational_experiment_datas')
    op.drop_table('measurements')
    op.drop_table('computational_experiments')
    op.drop_table('laboratory_experiments')
    op.drop_table('computational_experiment_templates')
    op.drop_table('schemas')
    # ### end Alembic commands ###
    op.execute('DROP TYPE IF EXISTS schemakind, experimentkind;')
