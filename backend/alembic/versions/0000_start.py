"""Start

Revision ID: 0000
Revises: 
Create Date: 2024-12-27 00:47:23.414402

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0000'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'role') THEN
            CREATE TYPE role AS ENUM ('ADMIN', 'RESEARCHER');
        END IF;
    END
    $$;
    """)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('surname', sa.String(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.Column('registered_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"),
                              nullable=False),
                    sa.Column('role',
                              sa.Enum('ADMIN', 'RESEARCHER', name='role').with_variant(
                                  postgresql.ENUM(
                                      'ADMIN',
                                      'RESEARCHER',
                                      name='role',
                                      create_type=False,
                                  ),
                                  'postgresql',
                              ),
                              nullable=False,
                              ),
                    sa.Column('id', sa.BigInteger(), server_default=sa.Identity(always=False), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
    op.execute('DROP TYPE IF EXISTS role;')
